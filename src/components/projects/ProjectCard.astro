---
interface Props{
    title: String;
    p1: String;
    p2?: String;
    p3?: String;
    p4?: String;
    show: String[];
}
const {title, p1, p2, p3, p4, show} = Astro.props;
---

<article>
    <section class="description">
        <h1>{title}</h1>
        {p1? <p>{p1}</p> :null}
        {p2? <p>{p2}</p> :null}
        {p3? <p>{p3}</p> :null}
        {p4? <p>{p4}</p> :null}
    </section>
    <section class="images">
        {
            show.map( imageRoute =>(
                <img src={`${imageRoute}`} alt=""></img>
            ))
        }
    </section>
</article>

<style>
    article{
        display: grid;
        grid-template-columns: 1fr 1fr;
        padding: 1rem;
        gap: 2rem;
        border-radius: var(--m-border-radius);
        background-color: var(--c-black);
    }
    h1{
        font-size: var(--t-large);
        color: white;
        font-weight: 700;
        margin: 0;
    }
    .description{
        grid-column: 1/2;
        grid-row: 1/3;
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    .description p{
        font-size: var(--t-medium);
        font-weight: 300;
    }
    .images{
        grid-column: 2/3;
        grid-row: 1/3;
        position: relative;
        height: 400px;
        background-color: aliceblue;
        border-radius: var(--m-border-radius);
        padding: 1rem;
    }
    .images img{
        position: absolute;
    }
    	/* Mobile */
	@media (max-width: 700px) {
        article{
            grid-template-columns: 1fr;
        }
        .description{
            grid-column: 1/2;
            grid-row: 1/2;
        }
        .images{
            grid-column: 1/2;
            grid-row: 2/3;
        }
	}
</style>